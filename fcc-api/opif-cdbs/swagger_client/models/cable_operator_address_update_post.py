# coding: utf-8

"""
    OPIF Service Data API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.9.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class CableOperatorAddressUpdatePost(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'operator_address_line1': 'str',
        'operator_address_line2': 'str',
        'operator_po_box': 'str',
        'operator_city': 'str',
        'operator_zip_code': 'str',
        'operator_zip_code_suffix': 'str',
        'operator_state': 'str',
        'operator_email': 'str',
        'operator_website': 'str',
        'psid': 'str',
        'access_token': 'str'
    }

    attribute_map = {
        'operator_address_line1': 'operatorAddressLine1',
        'operator_address_line2': 'operatorAddressLine2',
        'operator_po_box': 'operatorPoBox',
        'operator_city': 'operatorCity',
        'operator_zip_code': 'operatorZipCode',
        'operator_zip_code_suffix': 'operatorZipCodeSuffix',
        'operator_state': 'operatorState',
        'operator_email': 'operatorEmail',
        'operator_website': 'operatorWebsite',
        'psid': 'psid',
        'access_token': 'accessToken'
    }

    def __init__(self, operator_address_line1=None, operator_address_line2=None, operator_po_box=None, operator_city=None, operator_zip_code=None, operator_zip_code_suffix=None, operator_state=None, operator_email=None, operator_website=None, psid=None, access_token=None):  # noqa: E501
        """CableOperatorAddressUpdatePost - a model defined in Swagger"""  # noqa: E501
        self._operator_address_line1 = None
        self._operator_address_line2 = None
        self._operator_po_box = None
        self._operator_city = None
        self._operator_zip_code = None
        self._operator_zip_code_suffix = None
        self._operator_state = None
        self._operator_email = None
        self._operator_website = None
        self._psid = None
        self._access_token = None
        self.discriminator = None
        if operator_address_line1 is not None:
            self.operator_address_line1 = operator_address_line1
        if operator_address_line2 is not None:
            self.operator_address_line2 = operator_address_line2
        if operator_po_box is not None:
            self.operator_po_box = operator_po_box
        if operator_city is not None:
            self.operator_city = operator_city
        if operator_zip_code is not None:
            self.operator_zip_code = operator_zip_code
        if operator_zip_code_suffix is not None:
            self.operator_zip_code_suffix = operator_zip_code_suffix
        if operator_state is not None:
            self.operator_state = operator_state
        if operator_email is not None:
            self.operator_email = operator_email
        if operator_website is not None:
            self.operator_website = operator_website
        if psid is not None:
            self.psid = psid
        if access_token is not None:
            self.access_token = access_token

    @property
    def operator_address_line1(self):
        """Gets the operator_address_line1 of this CableOperatorAddressUpdatePost.  # noqa: E501

        address line 1  # noqa: E501

        :return: The operator_address_line1 of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_address_line1

    @operator_address_line1.setter
    def operator_address_line1(self, operator_address_line1):
        """Sets the operator_address_line1 of this CableOperatorAddressUpdatePost.

        address line 1  # noqa: E501

        :param operator_address_line1: The operator_address_line1 of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_address_line1 = operator_address_line1

    @property
    def operator_address_line2(self):
        """Gets the operator_address_line2 of this CableOperatorAddressUpdatePost.  # noqa: E501

        address line 2  # noqa: E501

        :return: The operator_address_line2 of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_address_line2

    @operator_address_line2.setter
    def operator_address_line2(self, operator_address_line2):
        """Sets the operator_address_line2 of this CableOperatorAddressUpdatePost.

        address line 2  # noqa: E501

        :param operator_address_line2: The operator_address_line2 of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_address_line2 = operator_address_line2

    @property
    def operator_po_box(self):
        """Gets the operator_po_box of this CableOperatorAddressUpdatePost.  # noqa: E501

        post box number  # noqa: E501

        :return: The operator_po_box of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_po_box

    @operator_po_box.setter
    def operator_po_box(self, operator_po_box):
        """Sets the operator_po_box of this CableOperatorAddressUpdatePost.

        post box number  # noqa: E501

        :param operator_po_box: The operator_po_box of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_po_box = operator_po_box

    @property
    def operator_city(self):
        """Gets the operator_city of this CableOperatorAddressUpdatePost.  # noqa: E501

        city  # noqa: E501

        :return: The operator_city of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_city

    @operator_city.setter
    def operator_city(self, operator_city):
        """Sets the operator_city of this CableOperatorAddressUpdatePost.

        city  # noqa: E501

        :param operator_city: The operator_city of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_city = operator_city

    @property
    def operator_zip_code(self):
        """Gets the operator_zip_code of this CableOperatorAddressUpdatePost.  # noqa: E501

        Zip Code  # noqa: E501

        :return: The operator_zip_code of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_zip_code

    @operator_zip_code.setter
    def operator_zip_code(self, operator_zip_code):
        """Sets the operator_zip_code of this CableOperatorAddressUpdatePost.

        Zip Code  # noqa: E501

        :param operator_zip_code: The operator_zip_code of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_zip_code = operator_zip_code

    @property
    def operator_zip_code_suffix(self):
        """Gets the operator_zip_code_suffix of this CableOperatorAddressUpdatePost.  # noqa: E501

        Zip Code Extension  # noqa: E501

        :return: The operator_zip_code_suffix of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_zip_code_suffix

    @operator_zip_code_suffix.setter
    def operator_zip_code_suffix(self, operator_zip_code_suffix):
        """Sets the operator_zip_code_suffix of this CableOperatorAddressUpdatePost.

        Zip Code Extension  # noqa: E501

        :param operator_zip_code_suffix: The operator_zip_code_suffix of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_zip_code_suffix = operator_zip_code_suffix

    @property
    def operator_state(self):
        """Gets the operator_state of this CableOperatorAddressUpdatePost.  # noqa: E501

        state code  # noqa: E501

        :return: The operator_state of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_state

    @operator_state.setter
    def operator_state(self, operator_state):
        """Sets the operator_state of this CableOperatorAddressUpdatePost.

        state code  # noqa: E501

        :param operator_state: The operator_state of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_state = operator_state

    @property
    def operator_email(self):
        """Gets the operator_email of this CableOperatorAddressUpdatePost.  # noqa: E501

        Email address  # noqa: E501

        :return: The operator_email of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_email

    @operator_email.setter
    def operator_email(self, operator_email):
        """Sets the operator_email of this CableOperatorAddressUpdatePost.

        Email address  # noqa: E501

        :param operator_email: The operator_email of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_email = operator_email

    @property
    def operator_website(self):
        """Gets the operator_website of this CableOperatorAddressUpdatePost.  # noqa: E501

        Website  # noqa: E501

        :return: The operator_website of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._operator_website

    @operator_website.setter
    def operator_website(self, operator_website):
        """Sets the operator_website of this CableOperatorAddressUpdatePost.

        Website  # noqa: E501

        :param operator_website: The operator_website of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._operator_website = operator_website

    @property
    def psid(self):
        """Gets the psid of this CableOperatorAddressUpdatePost.  # noqa: E501

        cable psid  # noqa: E501

        :return: The psid of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._psid

    @psid.setter
    def psid(self, psid):
        """Sets the psid of this CableOperatorAddressUpdatePost.

        cable psid  # noqa: E501

        :param psid: The psid of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._psid = psid

    @property
    def access_token(self):
        """Gets the access_token of this CableOperatorAddressUpdatePost.  # noqa: E501

        Access token of the entity/facility  # noqa: E501

        :return: The access_token of this CableOperatorAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this CableOperatorAddressUpdatePost.

        Access token of the entity/facility  # noqa: E501

        :param access_token: The access_token of this CableOperatorAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._access_token = access_token

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CableOperatorAddressUpdatePost, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CableOperatorAddressUpdatePost):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
