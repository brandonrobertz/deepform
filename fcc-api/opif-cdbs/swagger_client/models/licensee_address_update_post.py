# coding: utf-8

"""
    OPIF Service Data API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.9.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class LicenseeAddressUpdatePost(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'licensee': 'str',
        'address_line1': 'str',
        'address_line2': 'str',
        'city': 'str',
        'state': 'str',
        'zip_code': 'str',
        'zip_ext': 'str',
        'phone': 'str',
        'email': 'str',
        'website': 'str',
        'facility_id': 'str',
        'access_token': 'str'
    }

    attribute_map = {
        'licensee': 'licensee',
        'address_line1': 'addressLine1',
        'address_line2': 'addressLine2',
        'city': 'city',
        'state': 'state',
        'zip_code': 'zipCode',
        'zip_ext': 'zipExt',
        'phone': 'phone',
        'email': 'email',
        'website': 'website',
        'facility_id': 'facilityId',
        'access_token': 'accessToken'
    }

    def __init__(self, licensee=None, address_line1=None, address_line2=None, city=None, state=None, zip_code=None, zip_ext=None, phone=None, email=None, website=None, facility_id=None, access_token=None):  # noqa: E501
        """LicenseeAddressUpdatePost - a model defined in Swagger"""  # noqa: E501
        self._licensee = None
        self._address_line1 = None
        self._address_line2 = None
        self._city = None
        self._state = None
        self._zip_code = None
        self._zip_ext = None
        self._phone = None
        self._email = None
        self._website = None
        self._facility_id = None
        self._access_token = None
        self.discriminator = None
        if licensee is not None:
            self.licensee = licensee
        if address_line1 is not None:
            self.address_line1 = address_line1
        if address_line2 is not None:
            self.address_line2 = address_line2
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if zip_code is not None:
            self.zip_code = zip_code
        if zip_ext is not None:
            self.zip_ext = zip_ext
        if phone is not None:
            self.phone = phone
        if email is not None:
            self.email = email
        if website is not None:
            self.website = website
        if facility_id is not None:
            self.facility_id = facility_id
        if access_token is not None:
            self.access_token = access_token

    @property
    def licensee(self):
        """Gets the licensee of this LicenseeAddressUpdatePost.  # noqa: E501

        Name of the licensee  # noqa: E501

        :return: The licensee of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._licensee

    @licensee.setter
    def licensee(self, licensee):
        """Sets the licensee of this LicenseeAddressUpdatePost.

        Name of the licensee  # noqa: E501

        :param licensee: The licensee of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._licensee = licensee

    @property
    def address_line1(self):
        """Gets the address_line1 of this LicenseeAddressUpdatePost.  # noqa: E501

        Address Line 1  # noqa: E501

        :return: The address_line1 of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this LicenseeAddressUpdatePost.

        Address Line 1  # noqa: E501

        :param address_line1: The address_line1 of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this LicenseeAddressUpdatePost.  # noqa: E501

        Address Line 2  # noqa: E501

        :return: The address_line2 of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this LicenseeAddressUpdatePost.

        Address Line 2  # noqa: E501

        :param address_line2: The address_line2 of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._address_line2 = address_line2

    @property
    def city(self):
        """Gets the city of this LicenseeAddressUpdatePost.  # noqa: E501

        City  # noqa: E501

        :return: The city of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this LicenseeAddressUpdatePost.

        City  # noqa: E501

        :param city: The city of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this LicenseeAddressUpdatePost.  # noqa: E501

        State code  # noqa: E501

        :return: The state of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this LicenseeAddressUpdatePost.

        State code  # noqa: E501

        :param state: The state of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def zip_code(self):
        """Gets the zip_code of this LicenseeAddressUpdatePost.  # noqa: E501

        Zip code  # noqa: E501

        :return: The zip_code of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this LicenseeAddressUpdatePost.

        Zip code  # noqa: E501

        :param zip_code: The zip_code of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._zip_code = zip_code

    @property
    def zip_ext(self):
        """Gets the zip_ext of this LicenseeAddressUpdatePost.  # noqa: E501

        Zip code extension  # noqa: E501

        :return: The zip_ext of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._zip_ext

    @zip_ext.setter
    def zip_ext(self, zip_ext):
        """Sets the zip_ext of this LicenseeAddressUpdatePost.

        Zip code extension  # noqa: E501

        :param zip_ext: The zip_ext of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._zip_ext = zip_ext

    @property
    def phone(self):
        """Gets the phone of this LicenseeAddressUpdatePost.  # noqa: E501

        phone number with no spaces and hyphens  # noqa: E501

        :return: The phone of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this LicenseeAddressUpdatePost.

        phone number with no spaces and hyphens  # noqa: E501

        :param phone: The phone of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def email(self):
        """Gets the email of this LicenseeAddressUpdatePost.  # noqa: E501

        email  # noqa: E501

        :return: The email of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this LicenseeAddressUpdatePost.

        email  # noqa: E501

        :param email: The email of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def website(self):
        """Gets the website of this LicenseeAddressUpdatePost.  # noqa: E501

        Website address  # noqa: E501

        :return: The website of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this LicenseeAddressUpdatePost.

        Website address  # noqa: E501

        :param website: The website of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._website = website

    @property
    def facility_id(self):
        """Gets the facility_id of this LicenseeAddressUpdatePost.  # noqa: E501

        Entity/Facility ID  # noqa: E501

        :return: The facility_id of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._facility_id

    @facility_id.setter
    def facility_id(self, facility_id):
        """Sets the facility_id of this LicenseeAddressUpdatePost.

        Entity/Facility ID  # noqa: E501

        :param facility_id: The facility_id of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._facility_id = facility_id

    @property
    def access_token(self):
        """Gets the access_token of this LicenseeAddressUpdatePost.  # noqa: E501

        Access token of the entity/facility  # noqa: E501

        :return: The access_token of this LicenseeAddressUpdatePost.  # noqa: E501
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this LicenseeAddressUpdatePost.

        Access token of the entity/facility  # noqa: E501

        :param access_token: The access_token of this LicenseeAddressUpdatePost.  # noqa: E501
        :type: str
        """

        self._access_token = access_token

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LicenseeAddressUpdatePost, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LicenseeAddressUpdatePost):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
